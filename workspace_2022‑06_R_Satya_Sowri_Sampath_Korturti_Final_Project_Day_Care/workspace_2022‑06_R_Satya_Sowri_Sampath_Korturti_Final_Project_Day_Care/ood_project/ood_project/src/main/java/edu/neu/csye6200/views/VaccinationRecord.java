/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.neu.csye6200.views;

import edu.neu.csye6200.model.Student;
import edu.neu.csye6200.model.*;

import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import edu.neu.csye6200.DB;
import edu.neu.csye6200.controllers.VaccinationJdbc;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import static edu.neu.csye6200.DB.database;



/**
 *
 * @author prudhvi
 */
public class VaccinationRecord extends javax.swing.JFrame {
    Vaccination vaccine = new Vaccination();
    VaccinationJdbc vjdbc = new VaccinationJdbc();

    private DefaultTableModel tmod = new DefaultTableModel(columns, 0);
    // Create the table
    private JTable tbl = new JTable(tmod);
    // Create the main panel
    private JPanel mainPanel = new JPanel(new BorderLayout());
    /**
     * Creates new form Immunization
     */
    ResultSet rset;
    ResultSet rset1;
    ResultSet rset2;
    ResultSet rset3;
    public static final String[] columns = {
        "Name", "Age", "Address"
    };
    public VaccinationRecord() throws SQLException {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImmunization = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblImmunization = new javax.swing.JTable();
        lblSID = new javax.swing.JLabel();
        txtSID = new javax.swing.JTextField();
        btnShow = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Immunization Record");
        setBackground(new java.awt.Color(204, 204, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setForeground(new java.awt.Color(0, 153, 153));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 6, 12));

        lblImmunization.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblImmunization.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImmunization.setText("Student Immunization Record");

        tblImmunization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "HIB", "", null, null},
                {null, "TDap", "", null, null},
                {null, "Polio", "", null, null},
                {null, "Hepatitis B", "", null, null},
                {null, "MMR", "", null, null},
                {null, "Varicella", "", null, null},
                {null, "Influenza", "", null, null}
            },
            new String [] {
                "SV ID", "Vaccine Name", "Last Dose Date", "Next Due Date", "Vaccinated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblImmunization.setMinimumSize(new java.awt.Dimension(80, 175));
        tblImmunization.setRowHeight(25);
        tblImmunization.setRowMargin(2);
        tblImmunization.setShowGrid(true);
        tblImmunization.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(tblImmunization);

        lblSID.setText("Student Id:");

        btnShow.setText("Show Data");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 222, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblSID, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(354, 354, 354))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(159, 159, 159))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnShow)
                                .addGap(96, 96, 96)
                                .addComponent(btnBack)
                                .addGap(309, 309, 309))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblImmunization, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblImmunization, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSID)
                    .addComponent(txtSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(btnShow))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
       
        
        try {
            // TODO add your handling code here:
            display();
            prompt();
            
        } catch (SQLException ex) {
            Logger.getLogger(VaccinationRecord.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
    }//GEN-LAST:event_btnShowActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
         this.toBack();
        MainFrame frame = new MainFrame();
        frame.setVisible(true);
        frame.toFront();
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    
     String dob;
     private void prompt() throws SQLException{
         LocalDate present = LocalDate.now();
         LocalDate[] upcomingDose = null;
         database = DB.getObj();
         String nextDose[]=new String[7];
         JOptionPane.showMessageDialog(null, "next dose date is still due");

        ResultSet rset = database.query("select next_dose_due_date from immunization_record where student_id = '1'");
        
        int i = 0;
        while(rset.next()){
                nextDose[i] = rset.getString("next_dose_due_date");
                upcomingDose[i] = LocalDate.parse(nextDose[i]);
                int checkDates = present.compareTo(upcomingDose[i]);
                if (checkDates > 0) {
                JOptionPane.showMessageDialog(null, "next dose date is still due for "+upcomingDose[i]);
                }

                i++;
        }
       
         
     }
     
    private void display() throws SQLException{
    DefaultTableModel dmod = (DefaultTableModel) tblImmunization.getModel();

        Connection connection = DriverManager.getConnection("jdbc:mysql://sql773.main-hosting.eu/u625234325_ood_proj", "u625234325_ood_proj", "Northeastern@4126");
        Statement statement = connection.createStatement();
        String[] strings = new String[7];
        String[] lastdose = new String[7];
        String[] nextdose = new String[7];
        String[] vaccined = new String[7];

        database = DB.getObj();

        rset = database.query("select svid from immunization_record where student_id = "+ txtSID.getText() );
        int i = 0;
        while(rset.next()){
            strings[i] = rset.getString("svid");
            i++;
        }

//First column - SVID
        Student student = new Student();
        for (int v = 0; v < 7; v++) {
            dmod.setValueAt(strings[v], v, 0);
        }



//Second column - Last due date
        rset1 = database.query("select last_dose_date from immunization_record where student_id = "+ txtSID.getText() );
        int j = 0;
        while(rset1.next()){
            lastdose[j] = rset1.getString("last_dose_date");
            j++;
        }
        for (int v = 0; v < 7; v++) {
            dmod.setValueAt(lastdose[v], v, 2);
        }


//Fourth Column - Next Due Date

        rset2 = database.query("select next_dose_due_date from immunization_record where student_id = "+ txtSID.getText());
        int k = 0;
        while(rset2.next()){
            nextdose[k] = rset2.getString("next_dose_due_date");
            k++;
        }
        for (int v = 0; v < 7; v++) {
            dmod.setValueAt(nextdose[v] , v , 3);
        }



//Fifth Column - Vaccinated

        rset3 = database.query("select vaccinated from immunization_record where student_id = "+ txtSID.getText());
        int l = 0;
        while(rset3.next()){
            vaccined[l] = rset3.getString("vaccinated");
            l++;
        }
        for (int v = 0; v < 7; v++) {
            dmod.setValueAt(vaccined[v], v, 4);
        }
       
    }   
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VaccinationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VaccinationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VaccinationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VaccinationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VaccinationRecord().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(VaccinationRecord.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnShow;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImmunization;
    private javax.swing.JLabel lblSID;
    private javax.swing.JTable tblImmunization;
    private javax.swing.JTextField txtSID;
    // End of variables declaration//GEN-END:variables
    
//    public JTable getjTable1() {
//       
//        return tblImmunization;
//        
//    }
//
//    public void setjTable1(JTable jTable1) {
//        this.tblImmunization = jTable1;
//    }
//
//    private static class LocalDatTime {
//
//        public LocalDatTime() {
//        }
//    }

    

}
